services:
  backend:
    container_name: backend_app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_started
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - ./.env
    command: [ "/bin/sh", "-c", "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port ${BACKEND_PORT} --reload" ]

  redis:
    container_name: redis_cache
    image: redis:alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      retries: 5
      timeout: 3s

  celery-worker:
    container_name: celery_worker
    build: .
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    entrypoint: [ "scripts/celery.sh" ]
    env_file:
      - ./.env

  flower:
    container_name: flower_monitor
    image: mher/flower
    env_file:
      - ./.env
    ports:
      - "${FLOWER_PORT}:${FLOWER_PORT}"
    depends_on:
      - redis
      - celery-worker

  celery-beat:
    build: .
    container_name: celery-beat
    restart: always
    env_file:
      - ./.env
    depends_on:
      - redis
    entrypoint: [ "scripts/celery_beat.sh" ]
